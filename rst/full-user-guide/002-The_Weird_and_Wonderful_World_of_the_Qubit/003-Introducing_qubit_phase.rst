Introducing Qubit Phase
=======================

In the last two sections we covered the bit-flip and the Hadamard gate. 
These allow us to to make the single-qubit quantum states 
:math:`\{|0\rangle, |1\rangle, |+\rangle, |-\rangle\}`, and have introduced us 
to quantum superpositions. However, a general 
single-qubit quantum state has even richer qualities. As we have already mentioned, a 
single-qubit quantum state can be written as 
:math:`|\psi\rangle=\alpha |0\rangle + \beta |1\rangle`, where 
:math:`\alpha` and :math:`\beta`
are complex numbers with the probability constraint 
:math:`|\alpha|^2+|\beta|^2=1`. Furthermore, the global phase of a quantum 
state is not detectable; therefore, :math:`|\psi\rangle` is the same as 
:math:`e^{i\gamma}|\psi\rangle`.

An alternative representation of a single-qubit state that incorporates both of 
these constraints can be written as 

.. math:: 
  ~~~~~~~~|\psi\rangle = \sqrt{p}|0\rangle + e^{i\phi} \sqrt{1-p} |1\rangle,


where :math:`0 \leq p \leq 1` is the probability of the bit being in the 0 state, and :math:`0\leq \phi < 2\pi` is 
the quantum phase. The set 
of quantum gates, generated by :math:`\{H,T\}`, makes it possible to reach all different
values of :math:`p` and :math:`\phi`. In the later sections we will 
show how this can be done in principle, and introduce the advanced gates
in the IBM Q Experience to give finer control.  First, however, we would like 
to develop an intuition for quantum phase by examining the :math:`T` gate. 
The :math:`T` gate applies a 
phase of :math:`\pi/4`, and has a matrix representation of

.. math:: 
  ~~~~~~~~T =\begin{pmatrix} 1 & 0 \\ 0 & e^{i\pi/4} \end{pmatrix}.

If we start with a system initially in the :math:`|+\rangle` (which is done using the 
Hadamard), then apply multiples of the :math:`T` gate and measure in the 
x-basis, we can map out this phase. These experiments are defined by the following eight scores:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_0.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_1.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_2.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_3.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_4.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_5.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_6.qasm
  :language: c++
  :linenos:

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_exp_7.qasm
  :language: c++
  :linenos:

.. raw:: html

  <a href="https://qiskit.org"  target="_blank">QISKit</a> example

.. literalinclude:: ../../../qiskit/python/quantum_phase.py
  :language: python
  :linenos:

Here, QISKit gives us a nice advantage, as we can simply loop over the different 
circuits.

The results are summarized in the following table, where X length is the result of 
probability 0 minus probability 1. You can think of it as the length of the x measurement.

+---------------+---------------+-------------+-----------+-----------+-----------+
|Experiment     | Phase angle   | Gates       | Prop 0    | Prob 1    | X length  |
+===============+===============+=============+===========+===========+===========+
| 0             | 0             |             | 1         | 0         | 1         |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 1             | :math:`\pi/4` | :math:`T`   | 0.8535533 | 0.1464466 | 0.7071067 |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 2             | :math:`\pi/2` | :math:`T^2` | 0.5       | 0.5       | 0         |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 3             | :math:`3\pi/4`| :math:`T^3` | 0.1464466 | 0.8535533 | -0.707106 |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 4             | :math:`\pi`   | :math:`T^4` | 0         | 1         | -1        |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 5             | :math:`5\pi/4`| :math:`T^5` |0.8535533  | 0.1464466 | 0.7071067 |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 6             | :math:`3\pi/2`| :math:`T^6` | 0.5       | 0.5       | 0         |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 7             | :math:`7\pi/4`| :math:`T^7` | 0.1464466 | 0.8535533 | -0.707106 |
+---------------+---------------+-------------+-----------+-----------+-----------+

Note: To get these values, you might need to set the number of shots to be much larger than 1024. 

You have probably noticed that there are additional gates: :math:`\{Y,Z,S,S^\dagger,` :math:`T^\dagger\}`, 
and a CNOT (that we will touch on later) available in the Composer. 
All of these gates can be built from the :math:`\{H,T,` and :math:`X\}`. 

.. math:: 
  ~~~~~~~~S =\begin{pmatrix} 1 & 0 \\ 0 & i \end{pmatrix} := T^2,
  ~~~~~~~~Z =\begin{pmatrix} 1 & 0 \\ 0 & -1 \end{pmatrix} := T^4,
  ~~~~~~~~S^\dagger =\begin{pmatrix} 1 & 0 \\ 0 & -i \end{pmatrix} := T^6,
  ~~~~~~~~T^\dagger =\begin{pmatrix} 1 & 0 \\ 0 & e^{-i\pi/4} \end{pmatrix} := T^7

and 

.. math:: 
  ~~~~~~~~Y =\begin{pmatrix} 0 & -i \\ i & 0 \end{pmatrix} := XZ

The coloring denotes the group properties. All the green gates form a group
known as the Pauli group, and can be made by :math:`\{X, Z\}`. The blue set 
forms a group called the Clifford group, and can be made by 
:math:`\{H, S\}` (Note the Pauli group 
can be made using these). The red gates are the non-Clifford gates. 

Now that we have a good understanding of the standard gates, we can define a third basis, the *circular* (or :math:`Y`) basis:
:math:`|\circlearrowright\rangle =
\frac{1}{\sqrt{2}}(|0\rangle+i|1\rangle)`, :math:`|\circlearrowleft\rangle
= \frac{1}{\sqrt{2}}(|0\rangle-i|1\rangle)`. To make the
:math:`|\circlearrowright\rangle` state from the :math:`|0 \rangle` state, 
use a :math:`H` gate 
followed by an :math:`S` gate. Try to figure out how to
get the :math:`|\circlearrowleft\rangle` on your own. 

To measure in this basis, we must rotate the computation basis
(:math:`Z`) to the circular basis (:math:`Y`). To do this, use an :math:`S^\dagger`
followed by :math:`H` before your measurement. See below for an example score (the other seven 
would be similar to before) and a QISKit
example, to map out the quantum phase experiment above projected into the 
circular basis. 

.. raw:: html

  OpenQasm Input

.. literalinclude:: ../../../qiskit/openqasm/quantum_phase_meas_y.qasm
  :language: c++
  :linenos:

.. raw:: html

  <a href="https://qiskit.org"  target="_blank">QISKit</a> example

.. literalinclude:: ../../../qiskit/python/quantum_phase_meas_y.py
  :language: python
  :linenos:

+---------------+---------------+-------------+-----------+-----------+-----------+
|Experiment     | Phase angle   | Gates       | Prop 0    | Prob 1    | Y length  |
+===============+===============+=============+===========+===========+===========+
| 0             | 0             |             | 0.5       | 0.5       | 0         |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 1             | :math:`\pi/4` | :math:`T`   | 0.8535533 | 0.1464466 | 0.7071067 |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 2             | :math:`\pi/2` | :math:`T^2` | 1.0       | 0         | 1         |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 3             | :math:`3\pi/4`| :math:`T^3` | 0.8535533 | 0.1464466 | 0.7071067 |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 4             | :math:`\pi`   | :math:`T^4` | 0.5       | 0.5       | 0         |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 5             | :math:`5\pi/4`| :math:`T^5` | 0.1464466 | 0.8535533 | -0.707107 |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 6             | :math:`3\pi/2`| :math:`T^6` | 0         | 1         | -1        |
+---------------+---------------+-------------+-----------+-----------+-----------+
| 7             | :math:`7\pi/4`| :math:`T^7` | 0.1464466 | 0.8535533 | -0.707106 |
+---------------+---------------+-------------+-----------+-----------+-----------+
